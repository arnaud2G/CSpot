//
//  UserPoolSignUpConfirmationViewController.swift
//  MySampleApp
//
//
// Copyright 2017 Amazon.com, Inc. or its affiliates (Amazon). All Rights Reserved.
//
// Code generated by AWS Mobile Hub. Amazon gives unlimited permission to 
// copy, distribute and modify it.
//
// Source code generated from template: aws-my-sample-app-ios-swift v0.10
//
//

import Foundation
import UIKit
import AWSCognitoIdentityProvider
import AWSMobileHubHelper

class UserPoolSignUpConfirmationViewController : UIViewController {
    
    var sentTo: String?
    var user: AWSCognitoIdentityUser?
    
    @IBOutlet weak var codeSentTo: UILabel!
    @IBOutlet weak var userName: UITextField!
    @IBOutlet weak var confirmationCode: UITextField!
    
    @IBOutlet weak var btnResend: UIButton!
    @IBOutlet weak var btnBack: UIButton!
    @IBOutlet weak var btnConfirm: UIButton!
    
    override func viewDidLoad() {
        super.viewDidLoad()
        self.userName.text = self.user!.username;
        
        btnBack.setImage(#imageLiteral(resourceName: "delete").withRenderingMode(.alwaysTemplate), for: .normal)
        btnBack.tintColor = UIColor().primary()
        
        btnConfirm.unselectedStyle()
        btnConfirm.setImage(#imageLiteral(resourceName: "pirate").withRenderingMode(.alwaysTemplate), for: .normal)
        btnConfirm.layer.cornerRadius = btnConfirm.frame.size.height/2
        
        btnResend.setTitleColor(UIColor().primary(), for: .normal)
    }
    
    @IBAction func onConfirm(_ sender: AnyObject) {
        guard let confirmationCodeValue = self.confirmationCode.text, !confirmationCodeValue.isEmpty else {
            UIAlertView(title: "Confirmation code missing.",
                        message: "Please enter a valid confirmation code.",
                        delegate: nil,
                        cancelButtonTitle: "Ok").show()
            return
        }
        self.user?.confirmSignUp(self.confirmationCode.text!, forceAliasCreation: true).continueWith(block: {[weak self] (task: AWSTask) -> AnyObject? in
            guard let strongSelf = self else { return nil }
            DispatchQueue.main.async(execute: { 
                if let error = task.error as? NSError {
                    UIAlertView(title: error.userInfo["__type"] as? String,
                        message: error.userInfo["message"] as? String,
                        delegate: nil,
                        cancelButtonTitle: "Ok").show()
                } else {
                    UIAlertView(title: "Registration Complete",
                        message: "Registration was successful.",
                        delegate: nil,
                        cancelButtonTitle: "Ok").show()
                    _ = strongSelf.navigationController?.popToRootViewController(animated: true)
                }
            })
            return nil
        })
    }
    
    @IBAction func onResendConfirmationCode(_ sender: AnyObject) {
        self.user?.resendConfirmationCode().continueWith(block: {[weak self] (task: AWSTask<AWSCognitoIdentityUserResendConfirmationCodeResponse>) -> AnyObject? in
            guard let _ = self else { return nil }
            DispatchQueue.main.async(execute: { 
                if let error = task.error as? NSError {
                    UIAlertView(title: error.userInfo["__type"] as? String,
                        message: error.userInfo["message"] as? String,
                        delegate: nil,
                        cancelButtonTitle: "Ok").show()
                } else if let result = task.result as AWSCognitoIdentityUserResendConfirmationCodeResponse! {
                    UIAlertView(title: "Code Resent",
                        message: "Code resent to \(result.codeDeliveryDetails?.destination!)",
                        delegate: nil,
                        cancelButtonTitle: "Ok").show()
                }
            })
            return nil
        })
    }
    
    @IBAction func onCancel(_ sender: AnyObject) {
        _ = self.navigationController?.popToRootViewController(animated: true)
    }
}
