//
//  UserPoolSignUpConfirmationViewController.swift
//  MySampleApp
//
//
// Copyright 2017 Amazon.com, Inc. or its affiliates (Amazon). All Rights Reserved.
//
// Code generated by AWS Mobile Hub. Amazon gives unlimited permission to 
// copy, distribute and modify it.
//
// Source code generated from template: aws-my-sample-app-ios-swift v0.10
//
//

import Foundation
import UIKit
import AWSCognitoIdentityProvider
import AWSMobileHubHelper

class UserPoolSignUpConfirmationViewController : UIViewController {
    
    var sentTo: String?
    var user: AWSCognitoIdentityUser?
    
    @IBOutlet weak var codeSentTo: UILabel!
    @IBOutlet weak var userName: UITextField!
    @IBOutlet weak var confirmationCode: UITextField!
    
    @IBOutlet weak var btnResend: UIButton!
    @IBOutlet weak var btnBack: UIButton!
    @IBOutlet weak var btnConfirm: UIButton!
    
    override func viewDidLoad() {
        super.viewDidLoad()
        self.userName.text = self.user!.username;
        
        btnBack.setImage(#imageLiteral(resourceName: "delete").withRenderingMode(.alwaysTemplate), for: .normal)
        btnBack.tintColor = UIColor().primary()
        
        btnConfirm.unselectedStyle()
        btnConfirm.setImage(#imageLiteral(resourceName: "pirate").withRenderingMode(.alwaysTemplate), for: .normal)
        btnConfirm.layer.cornerRadius = btnConfirm.frame.size.height/2
        
        btnResend.setTitleColor(UIColor().primary(), for: .normal)
    }
    
    
    @IBAction func onConfirm(_ sender: AnyObject) {
        
        let story = UIStoryboard(name: "Loadding", bundle: nil)
        let vc = story.instantiateInitialViewController()
        self.navigationController?.pushViewController(vc!, animated: true)
        
        guard let confirmationCodeValue = self.confirmationCode.text, !confirmationCodeValue.isEmpty else {
            DispatchQueue.main.async(execute: {
                NotificationCenter.default.post(name: CSpotNotif.message.name, object: CSPotMess.Succeed("Il manque le code de confirmation",false))
            })
            return
        }
        self.user?.confirmSignUp(self.confirmationCode.text!, forceAliasCreation: true).continueWith(block: {
            (task: AWSTask) -> AnyObject? in
            if let error = task.error as NSError? {
                NotificationCenter.default.post(name: CSpotNotif.message.name, object: CSPotMess.Fail(error,false))
            } else {
                NotificationCenter.default.post(name: CSpotNotif.message.name, object: CSPotMess.Succeed("Votre compte a été bien été créé",true))
            }
            return nil
        })
    }
    
    @IBAction func onResendConfirmationCode(_ sender: AnyObject) {
        
        let story = UIStoryboard(name: "Loadding", bundle: nil)
        let vc = story.instantiateInitialViewController()
        self.navigationController?.pushViewController(vc!, animated: true)
        
        self.user?.resendConfirmationCode().continueWith(block: {
            (task: AWSTask<AWSCognitoIdentityUserResendConfirmationCodeResponse>) -> AnyObject? in
            DispatchQueue.main.async(execute: {
                if let error = task.error as NSError? {
                    NotificationCenter.default.post(name: CSpotNotif.message.name, object: CSPotMess.Fail(error,false))
                } else if let result = task.result as AWSCognitoIdentityUserResendConfirmationCodeResponse!, let codeDeliveryDetails = result.codeDeliveryDetails, let destination = codeDeliveryDetails.destination {
                    NotificationCenter.default.post(name: CSpotNotif.message.name, object: CSPotMess.Succeed("Le code a été renvoyé à \(destination)",false))
                }
            })
            return nil
        })
    }
    
    @IBAction func onCancel(_ sender: AnyObject) {
        _ = self.navigationController?.popToRootViewController(animated: true)
    }
}
